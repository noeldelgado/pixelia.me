{"version":3,"sources":["public/js/lib/utils.js","public/js/lib/Point.js","public/js/lib/BackgroundCanvas.js","public/js/lib/HandleProjectsLoad.js","public/js/index.js"],"names":["floor","Math","random","$","document","querySelector","bind","$$","querySelectorAll","randomInt","min","max","internals","COLORS","MAX_POINT_SPEED","MIN_POINT_SPEED","MIN_POINT_RADIO","MAX_POINT_RADIO","Point","index","alpha","alphaFactor","update","maxWidth","window","innerWidth","maxHeight","innerHeight","x","sx","y","sy","color","length","r","console","log","PI","pointsArray","BackgroundCanvas","config","Object","assign","totalPoints","bgColor","canvas","createElement","ctx","getContext","body","appendChild","_updateDynamics","i","push","that","_bindEvents","_loop","addEventListener","width","height","requestAnimationFrame","_draw","beginPath","globalAlpha","rect","fillStyle","fill","closePath","point","arc","checkUpdate","HandleProjectsLoad","links","_isActive","_demoWrapper","_iframe","_demoCloseButton","_iframeLoader","_iframeLoaderSecLayer","_iframeLoaderMainLayer","_iframeLoadingText","_previousFocusedElement","_handleLinkClick","_handleCloseIframe","_handleKeyUp","forEach","l","ev","preventDefault","iframeUrl","currentTarget","href","style","overflow","activeElement","classList","add","focus","opacity","display","src","once","event","keyCode","remove","getComputedStyle","getPropertyValue","run"],"mappings":"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","file":"js.ea414fde.js","sourceRoot":"../src","sourcesContent":["const { floor, random } = Math;\n\nexport const $ = document.querySelector.bind(document);\n\nexport const $$ = document.querySelectorAll.bind(document);\n\nexport const randomInt = (min, max) => {\n    return floor(random() * (max - min + 1)) + min;\n};\n","const { floor, random } = Math;\n\nimport { randomInt } from './utils';\n\nconst internals = {\n    COLORS: [\n        'rgba(238, 170, 238, .25)',\n        'rgba(238, 170, 238, .75)',\n        'rgba(153, 255, 235, .25)',\n        'rgba(153, 255, 235, .75)'\n    ],\n    MAX_POINT_SPEED: 0.05,\n    MIN_POINT_SPEED: -0.05,\n    MIN_POINT_RADIO: 0.6,\n    MAX_POINT_RADIO: 1\n};\n\nexport default class Point {\n    constructor(index) {\n        this.index = index;\n        this.alpha = random();\n        this.alphaFactor = this.alpha * 0.1 * 0.1;\n        this.update({\n            maxWidth: window.innerWidth,\n            maxHeight: window.innerHeight\n        });\n    }\n\n    checkUpdate({ maxWidth, maxHeight }) {\n        const point = this;\n\n        point.x += point.sx;\n        point.y += point.sy;\n        point.alpha += point.alphaFactor;\n\n        if (point.x > maxWidth || point.x < 0) {\n            point.sx *= -1;\n        }\n\n        if (point.y > maxHeight || point.y < 0) {\n            point.sy *= -1;\n        }\n\n        if (point.alpha > 1 || point.alpha < 0) {\n            point.alphaFactor *= -1;\n        }\n\n        if (point.alpha < 0) {\n            point.update({\n                maxWidth,\n                maxHeight\n            });\n        }\n    }\n\n    update({ maxWidth, maxHeight }) {\n        const point = this;\n\n        point.x = random() * maxWidth;\n        point.y = random() * maxHeight;\n        point.color = internals.COLORS[floor(random() * internals.COLORS.length)];\n        point.r = randomInt(internals.MIN_POINT_RADIO, internals.MAX_POINT_RADIO);\n        point.sx = random() < 0.5 ? internals.MIN_POINT_SPEED : internals.MAX_POINT_SPEED;\n        point.sy = random() < 0.5 ? internals.MIN_POINT_SPEED : internals.MAX_POINT_SPEED;\n    }\n}\n","const { log } = console;\nconst { PI  } = Math;\n\nimport Point from './Point';\n\nconst internals = {\n    maxWidth: 0,\n    maxHeight: 0,\n    pointsArray: []\n};\n\nexport default class BackgroundCanvas {\n    constructor(config) {\n        log('🖼');\n\n        const that = this;\n\n        Object.assign(that.config = {}, {\n            totalPoints: 100,\n            bgColor: '#000'\n        }, config);\n\n        that.canvas = document.createElement('canvas');\n        that.ctx = that.canvas.getContext('2d');\n        if (!that.ctx) return;\n\n        document.body.appendChild(that.canvas);\n        that._updateDynamics();\n\n        for (let i = 0; i < that.config.totalPoints; i+=1) {\n            internals.pointsArray.push(new Point(i));\n        }\n    }\n\n    run() {\n        const that = this;\n\n        that._bindEvents();\n        that._loop();\n\n        return that;\n    }\n\n    _bindEvents() {\n        const that = this;\n\n        that._loop = that._loop.bind(that);\n\n        that._updateDynamics = that._updateDynamics.bind(that);\n        window.addEventListener('resize', that._updateDynamics);\n\n        return that;\n    }\n\n    _updateDynamics() {\n        const that = this;\n\n        internals.maxWidth = window.innerWidth;\n        internals.maxHeight = window.innerHeight;\n        that.canvas.width = internals.maxWidth;\n        that.canvas.height = internals.maxHeight;\n    }\n\n    _loop() {\n        window.requestAnimationFrame(this._loop);\n        this._draw();\n    }\n\n    _draw() {\n        const that = this;\n\n        that.ctx.beginPath();\n        that.ctx.globalAlpha = 1;\n        that.ctx.rect(0, 0, internals.maxWidth, internals.maxHeight);\n        that.ctx.fillStyle = that.config.bgColor;\n        that.ctx.fill();\n        that.ctx.closePath();\n\n        for (let i = 0; i < internals.pointsArray.length; i += 1) {\n            let point = internals.pointsArray[i];\n\n            that.ctx.beginPath();\n            that.ctx.globalAlpha = point.alpha;\n            that.ctx.fillStyle = point.color;\n            that.ctx.arc(point.x, point.y, point.r, PI * 2, false);\n            that.ctx.fill();\n            that.ctx.closePath();\n\n            point.checkUpdate({\n                maxWidth: internals.maxWidth,\n                maxHeight: internals.maxHeight\n            });\n        }\n    }\n}\n","const { log } = console;\n\nimport { $ } from './utils';\n\nexport default class HandleProjectsLoad {\n    constructor(config) {\n        log('🎬');\n\n        const that = this;\n\n        Object.assign(that.config = {}, {\n            links: null\n        }, config);\n\n        if (!that.config.links) return;\n\n        that._isActive = false;\n        that._demoWrapper = $('.iframe-wrapper');\n        that._iframe = that._demoWrapper.querySelector('iframe');\n        that._demoCloseButton = $('.iframe-close-button');\n        that._iframeLoader = $('.iframe-loader');\n        that._iframeLoaderSecLayer = $('.iframe-loader > div:nth-child(1)');\n        that._iframeLoaderMainLayer = $('.iframe-loader > div:nth-child(2)')\n        that._iframeLoadingText = $('.iframe-loading-text');\n        that._previousFocusedElement = null;\n    }\n\n    run() {\n        const that = this;\n\n        that._bindEvents();\n\n        return that;\n    }\n\n    _bindEvents() {\n        const that = this;\n\n        that._handleLinkClick = that._handleLinkClick.bind(that);\n        that._handleCloseIframe = that._handleCloseIframe.bind(that);\n        that._handleKeyUp = that._handleKeyUp.bind(that);\n\n        that.config.links.forEach(l => l.addEventListener('click', that._handleLinkClick));\n        that._demoCloseButton.addEventListener('click', that._handleCloseIframe);\n        document.addEventListener('keyup', that._handleKeyUp);\n\n        return that;\n    }\n\n    _handleLinkClick(ev) {\n        ev.preventDefault();\n\n        const that = this;\n        const iframeUrl = ev.currentTarget.href;\n\n        document.body.style.overflow = 'hidden';\n\n        that._previousFocusedElement = document.activeElement;\n        that._iframeLoader.classList.add('-show');\n\n        that._demoCloseButton.focus();\n\n        that._iframeLoaderMainLayer.addEventListener('transitionend', () => {\n            that._iframeLoadingText.style.opacity = 1;\n\n            that._demoWrapper.style.opacity = 0;\n            that._demoWrapper.style.display = 'block';\n            that._iframe.src = iframeUrl;\n\n            that._iframe.addEventListener('load', () => {\n                that._isActive = true;\n\n                that._iframeLoadingText.style.opacity = 0;\n                that._iframeLoader.classList.add('-hide');\n                that._demoWrapper.style.opacity = 1;\n\n                that._iframeLoaderSecLayer.addEventListener('transitionend', () => {\n                    that._demoWrapper.classList.add('-loaded');\n                }, { once: true });\n            }, { once: true });\n        }, { once: true });\n    }\n\n    _handleKeyUp(ev) {\n        const that = this;\n\n        ev = (ev || window.event);\n\n        if (that._isActive === false) {\n            return;\n        }\n\n        if (ev.keyCode == 27) {\n            that._handleCloseIframe();\n        }\n    }\n\n    _handleCloseIframe() {\n        const that = this;\n\n        that._isActive = false;\n        that._iframeLoader.classList.remove('-hide');\n\n        that._iframeLoaderMainLayer.addEventListener('transitionend', () => {\n            that._iframeLoader.classList.remove('-show');\n\n            that._demoWrapper.style.opacity = 0;\n            that._demoWrapper.style.display = 'none';\n            that._demoWrapper.classList.remove('-loaded');\n\n            that._iframeLoaderMainLayer.addEventListener('transitionend', () => {\n                that._iframe.src = '';\n                document.body.style.overflow = '';\n\n                if (that._previousFocusedElement) {\n                    that._previousFocusedElement.focus();\n                }\n            }, { once: true });\n        }, { once: true });\n    }\n}\n","import { $$ } from './lib/utils';\nimport BackgroundCanvas from './lib/BackgroundCanvas';\nimport HandleProjectsLoad from './lib/HandleProjectsLoad';\n\nnew BackgroundCanvas({\n    totalPoints: 200,\n    bgColor: getComputedStyle(document.body, null).getPropertyValue('background-color')\n}).run();\n\nnew HandleProjectsLoad({\n    links: $$('.demos a:not([target=\"_blank\"]), .oss a:not([target=\"_blank\"])')\n}).run();\n\n"]}